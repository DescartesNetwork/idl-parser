{"version":3,"file":"static/js/src_bootstrap_app_tsx-node_modules_idl-parser-core_index_min_css-node_modules_rc-dialog_asset-5de8ab.7a1fd396.chunk.js","mappings":"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","sources":["static/images/logo.svg","static.app.tsx","view/buttonTxInstruction.tsx","helper/index.tsx","view/index.tsx","model/devTools.ts","model/main.controller.tsx","model/index.ts","configs/manifest.config.ts","configs/sol.config.ts","configs/index.ts","bootstrap.app.tsx"],"sourcesContent":["var _rect, _g, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 96,\n    height: 96,\n    viewBox: \"0 0 96 96\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 96,\n    height: 96,\n    rx: 24,\n    fill: \"url(#paint0_linear_2460_5843)\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_2460_5843)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M54 48C54 62.3594 42.3594 74 28 74C13.6406 74 2 62.3594 2 48C2 33.6406 13.6406 22 28 22C42.3594 22 54 33.6406 54 48ZM12.6714 48C12.6714 56.4657 19.5343 63.3286 28 63.3286C36.4657 63.3286 43.3286 56.4657 43.3286 48C43.3286 39.5343 36.4657 32.6714 28 32.6714C19.5343 32.6714 12.6714 39.5343 12.6714 48Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.3,\n    d: \"M94 48C94 62.3594 82.3594 74 68 74C53.6406 74 42 62.3594 42 48C42 33.6406 53.6406 22 68 22C82.3594 22 94 33.6406 94 48ZM52.6714 48C52.6714 56.4657 59.5343 63.3286 68 63.3286C76.4657 63.3286 83.3286 56.4657 83.3286 48C83.3286 39.5343 76.4657 32.6714 68 32.6714C59.5343 32.6714 52.6714 39.5343 52.6714 48Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 27.7662,\n    y: 48,\n    width: 29.1567,\n    height: 29.1567,\n    rx: 2.97465,\n    transform: \"rotate(-45 27.7662 48)\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.7662,\n    y: 48,\n    width: 16.4287,\n    height: 16.4287,\n    rx: 2.97465,\n    transform: \"rotate(-45 35.7662 48)\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_2460_5843\",\n    x1: 0.00000143051,\n    y1: 96,\n    x2: 107.885,\n    y2: 79.9647,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#DC1FFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4E6ABE\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_2460_5843\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 66,\n    height: 66,\n    fill: \"white\",\n    transform: \"translate(15 15)\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.60f0ed09986f5a8f714385de00697d1e.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel.png\"));\n\nvar _panel2 = _interopRequireDefault(require(\"./static/images/panel1.png\"));\n\nvar _panel3 = _interopRequireDefault(require(\"./static/images/panel2.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.svg\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel3.default, _panel.default, _panel2.default];\nexports.panels = panels;","import { useState } from 'react'\nimport { useWallet } from '@sentre/senhub'\nimport { Transaction } from '@solana/web3.js'\nimport { useParser } from 'idl-parser-core'\n\nimport { Button, ButtonProps } from 'antd'\n\nimport { getAnchorProvider, notifyError, notifySuccess } from 'helper'\n\ntype ButtonTxInstructProps = { instruct: string } & ButtonProps\nconst ButtonTxInstruct = ({ instruct, ...props }: ButtonTxInstructProps) => {\n  const [loading, setLoading] = useState(false)\n  const { txInstructions } = useParser()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const onClick = async (key: string) => {\n    try {\n      setLoading(true)\n      if (!txInstructions || !Object.keys(txInstructions).length) return\n      const { data: instruction, signer } = txInstructions[key]\n\n      const transaction = new Transaction().add(instruction)\n      const provider = getAnchorProvider(walletAddress)\n      const txId = await provider.sendAndConfirm(transaction, signer)\n      notifySuccess(key, txId)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Button onClick={() => onClick(instruct)} loading={loading} {...props}>\n      {instruct}\n    </Button>\n  )\n}\n\nexport default ButtonTxInstruct\n","import { AnchorProvider } from '@project-serum/anchor'\nimport { rpc, util } from '@sentre/senhub/dist'\n\nimport { PublicKey, Connection, Transaction } from '@solana/web3.js'\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(util.explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n\nexport const getAnchorProvider = (walletAddress: string) => {\n  const node = rpc\n  const wallet = window.sentre.wallet\n  const connection = new Connection(node, 'confirmed')\n\n  const signAllTransactions = async (transactions: Transaction[]) => {\n    const signedTransactions = []\n    for (const transaction of transactions) {\n      const signedTransaction = await wallet.signTransaction(transaction)\n      signedTransactions.push(signedTransaction)\n    }\n    return signedTransactions\n  }\n\n  const publicKey = new PublicKey(walletAddress)\n  return new AnchorProvider(\n    connection,\n    {\n      publicKey: new PublicKey(publicKey),\n      signTransaction: wallet.signTransaction,\n      signAllTransactions,\n    },\n    {\n      commitment: 'confirmed',\n      skipPreflight: true,\n    },\n  )\n}\n","import { IDLParserWrapper, useParser } from 'idl-parser-core'\n\nimport { Card, Col, Empty, Row, Space, Typography } from 'antd'\nimport ButtonTxInstruct from './buttonTxInstruction'\n\nconst View = () => {\n  const { txInstructions } = useParser()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} lg={16}>\n        <Card bordered={false}>\n          <IDLParserWrapper />\n        </Card>\n      </Col>\n      <Col xs={24} lg={8}>\n        <Card bordered={false} style={{ height: '100%' }}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Space direction=\"vertical\">\n                <Typography.Title level={5}>\n                  Transaction Instructions\n                </Typography.Title>\n                <Typography.Text type=\"secondary\">\n                  Send & Confirm the transactions instruction\n                </Typography.Text>\n              </Space>\n            </Col>\n            {!!txInstructions && !!Object.keys(txInstructions).length ? (\n              Object.keys(txInstructions).map((key, idx) => (\n                <Col md={24} lg={12} key={idx}>\n                  <ButtonTxInstruct instruct={key} block />\n                </Col>\n              ))\n            ) : (\n              <Col span={24} style={{ textAlign: 'center' }}>\n                <Empty />\n              </Col>\n            )}\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24} /> {/* Safe sapce */}\n    </Row>\n  )\n}\n\nexport default View\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  counter: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {\n  counter: 0,\n}\n\n/**\n * Actions\n */\n\nexport const increaseCounter = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/increaseCounter`,\n  async (_, { getState }) => {\n    const {\n      main: { counter },\n    } = getState()\n    return { counter: counter + 1 }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      increaseCounter.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'model/devTools'\n\nimport main from 'model/main.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from '@sentre/senhub'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { useCallback, useEffect, useState } from 'react'\nimport { Provider } from 'react-redux'\nimport { WalletProvider, UIProvider, rpc } from '@sentre/senhub'\nimport { ParserProvider } from 'idl-parser-core'\n\nimport View from 'view'\n\nimport model from 'model'\nimport configs from 'configs'\n\nimport 'static/styles/dark.less'\nimport 'static/styles/light.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  const [walletAddress, setWalletAddress] = useState('')\n\n  const getWalletAddress = useCallback(async () => {\n    if (!window.sentre.wallet) return\n    const address = await window.sentre.wallet.getAddress()\n    setWalletAddress(address)\n  }, [])\n\n  useEffect(() => {\n    getWalletAddress()\n  }, [getWalletAddress])\n\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <Provider store={model}>\n          <ParserProvider\n            rpc={rpc}\n            walletAddress={walletAddress}\n            programAddresses={{ provider: '' }}\n            appId={appId}\n          >\n            <View />\n          </ParserProvider>\n        </Provider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n\nexport * from 'static.app'\n"],"names":["_rect","_g","_defs","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","clipPath","opacity","d","x","y","transform","x1","y1","x2","y2","gradientUnits","stopColor","offset","ForwardRef","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","_panel2","_panel3","obj","__esModule","panels","instruct","loading","setLoading","useState","txInstructions","useParser","wallet","address","walletAddress","useWallet","onClick","async","keys","data","instruction","signer","transaction","Transaction","add","provider","node","rpc","window","sentre","connection","Connection","publicKey","PublicKey","AnchorProvider","signTransaction","signAllTransactions","signedTransactions","transactions","signedTransaction","push","commitment","skipPreflight","getAnchorProvider","content","txId","notify","type","description","open","util","notifySuccess","sendAndConfirm","error","er","message","Button","Row","gutter","Col","xs","lg","Card","bordered","IDLParserWrapper","style","span","Space","direction","Typography","level","map","idx","md","block","textAlign","Empty","BigInt","toJSON","toString","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","proto","getPrototypeOf","isPlainObject","BN","Buffer","isBuffer","NAME","increaseCounter","createAsyncThunk","_","getState","main","counter","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","configureStore","middleware","getDefaultMiddleware","devTools","reducer","shared","appId","process","url","devnet","spltAddress","splataAddress","testnet","mainnet","manifest","development","staging","production","env","sol","net","configs","Page","setWalletAddress","getWalletAddress","useCallback","getAddress","useEffect","UIProvider","antd","prefixCls","WalletProvider","Provider","store","model","ParserProvider","programAddresses"],"sourceRoot":""}