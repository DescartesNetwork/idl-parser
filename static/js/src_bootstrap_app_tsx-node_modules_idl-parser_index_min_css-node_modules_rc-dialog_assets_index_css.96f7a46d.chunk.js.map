{"version":3,"file":"static/js/src_bootstrap_app_tsx-node_modules_idl-parser_index_min_css-node_modules_rc-dialog_assets_index_css.96f7a46d.chunk.js","mappings":"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","sources":["static/images/logo.svg","static.app.tsx","view/buttonTxInstruction.tsx","helper/index.tsx","view/index.tsx","configs/manifest.config.ts","configs/sol.config.ts","configs/index.ts","model/devTools.ts","model/main.controller.tsx","model/index.ts","bootstrap.app.tsx"],"sourcesContent":["var _rect, _g, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 96,\n    height: 96,\n    viewBox: \"0 0 96 96\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 96,\n    height: 96,\n    rx: 24,\n    fill: \"url(#paint0_linear_2460_5843)\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_2460_5843)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M87.3033 31.8061L79.2016 38.0091C77.306 35.4979 74.6882 33.634 71.7034 32.6706C68.7186 31.7071 65.5113 31.6908 62.517 32.6237C59.5226 33.5566 56.8861 35.3936 54.9653 37.8854C53.0445 40.3772 51.9324 43.4031 51.78 46.5524C51.6276 49.7018 52.4422 52.822 54.1133 55.4897C55.7844 58.1574 58.231 60.2433 61.1212 61.4643C64.0113 62.6854 67.205 62.9824 70.2687 62.3152C73.3324 61.6479 76.1179 60.0486 78.2469 57.7344L85.7186 64.6929C82.1703 68.5492 77.5284 71.2142 72.4228 72.3261C67.3171 73.4381 61.995 72.9433 57.1785 70.9088C52.3621 68.8743 48.2844 65.3987 45.499 60.9534C42.7135 56.5082 41.3551 51.3087 41.608 46.0603C41.8609 40.812 43.7129 35.769 46.9127 31.6156C50.1125 27.4621 54.5052 24.3994 59.4947 22.843C64.4842 21.2865 69.8289 21.3118 74.8037 22.9152C79.7785 24.5186 84.1424 27.6226 87.3033 31.8061Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M2.55376 37.3471L11.9849 41.2419C13.1659 38.3256 15.2122 35.8477 17.8459 34.1446C20.4797 32.4415 23.5734 31.5956 26.7072 31.7217C29.841 31.8478 32.8631 32.9398 35.3634 34.8496C37.8637 36.7593 39.721 39.3943 40.6833 42.3969C41.6457 45.3995 41.6664 48.6242 40.7427 51.6335C39.819 54.6428 37.9956 57.2909 35.5199 59.2184C33.0443 61.1458 30.0364 62.2593 26.9043 62.4077C23.7723 62.5562 20.6678 61.7323 18.0123 60.048L12.5962 68.7032C17.0217 71.5097 22.1952 72.8825 27.4147 72.6351C32.6341 72.3878 37.6468 70.5324 41.7726 67.3206C45.8984 64.1088 48.9375 59.6962 50.4776 54.6815C52.0176 49.6669 51.984 44.2929 50.3814 39.2889C48.7787 34.2848 45.6846 29.8929 41.5188 26.7092C37.3531 23.5255 32.3174 21.704 27.0951 21.492C21.8727 21.28 16.7166 22.6877 12.3264 25.524C7.93609 28.3604 4.52424 32.4881 2.55376 37.3471Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29.1329,\n    y: 46.9772,\n    width: 24.5834,\n    height: 24.5834,\n    rx: 2.97465,\n    transform: \"rotate(-45 29.1329 46.9772)\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_2460_5843\",\n    x1: 0.00000143051,\n    y1: 96,\n    x2: 107.885,\n    y2: 79.9647,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#DC1FFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4E6ABE\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_2460_5843\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 66,\n    height: 66,\n    fill: \"white\",\n    transform: \"translate(15 15)\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.95dfe82e86990faf4a158b1b872164a6.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.svg\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel.default];\nexports.panels = panels;","import { useState } from 'react'\nimport { useParser } from 'idl-parser'\nimport { useWallet } from '@sentre/senhub'\nimport { Transaction } from '@solana/web3.js'\n\nimport { Button, ButtonProps } from 'antd'\n\nimport { getAnchorProvider, notifyError, notifySuccess } from 'helper'\n\ntype ButtonTxInstructProps = { instruct: string } & ButtonProps\nconst ButtonTxInstruct = ({ instruct, ...props }: ButtonTxInstructProps) => {\n  const [loading, setLoading] = useState(false)\n  const { txInstructions } = useParser()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const onClick = async (key: string) => {\n    try {\n      setLoading(true)\n      if (!txInstructions || !Object.keys(txInstructions).length) return\n      const instruction = txInstructions[key]\n      const transaction = new Transaction().add(instruction)\n      const provider = getAnchorProvider(walletAddress)\n      const txId = await provider.sendAndConfirm(transaction)\n      notifySuccess(key, txId)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Button onClick={() => onClick(instruct)} loading={loading} {...props}>\n      {instruct}\n    </Button>\n  )\n}\n\nexport default ButtonTxInstruct\n","import { AnchorProvider } from '@project-serum/anchor'\nimport { rpc, util } from '@sentre/senhub/dist'\n\nimport { PublicKey, Connection, Transaction } from '@solana/web3.js'\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(util.explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n\nexport const getAnchorProvider = (walletAddress: string) => {\n  const node = rpc\n  const wallet = window.sentre.wallet\n  const connection = new Connection(node, 'confirmed')\n\n  const signAllTransactions = async (transactions: Transaction[]) => {\n    const signedTransactions = []\n    for (const transaction of transactions) {\n      const signedTransaction = await wallet.signTransaction(transaction)\n      signedTransactions.push(signedTransaction)\n    }\n    return signedTransactions\n  }\n\n  const publicKey = new PublicKey(walletAddress)\n  return new AnchorProvider(\n    connection,\n    {\n      publicKey: new PublicKey(publicKey),\n      signTransaction: wallet.signTransaction,\n      signAllTransactions,\n    },\n    {\n      commitment: 'confirmed',\n      skipPreflight: true,\n    },\n  )\n}\n","import { UploadIdl, useParser } from 'idl-parser'\n\nimport { Card, Col, Empty, Row, Space, Typography } from 'antd'\nimport ButtonTxInstruct from './buttonTxInstruction'\n\nconst View = () => {\n  const { txInstructions } = useParser()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col md={12} lg={8}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Card bordered={false}>\n              <UploadIdl />\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card bordered={false}>\n              <Row gutter={[24, 24]}>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Title level={5}>\n                      Transaction Instructions\n                    </Typography.Title>\n                    {/* <Typography.Text type=\"secondary\">\n                      Explore & install DApps on Senhub, build on Sentre, and\n                      send your project to the moon with Sen Suite\n                    </Typography.Text> */}\n                  </Space>\n                </Col>\n                {!!txInstructions && !!Object.keys(txInstructions).length ? (\n                  Object.keys(txInstructions).map((key, idx) => (\n                    <Col md={24} lg={12} key={idx}>\n                      <ButtonTxInstruct instruct={key} block />\n                    </Col>\n                  ))\n                ) : (\n                  <Col span={24} style={{ textAlign: 'center' }}>\n                    <Empty />\n                  </Col>\n                )}\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default View\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from '@sentre/senhub'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  counter: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {\n  counter: 0,\n}\n\n/**\n * Actions\n */\n\nexport const increaseCounter = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/increaseCounter`,\n  async (_, { getState }) => {\n    const {\n      main: { counter },\n    } = getState()\n    return { counter: counter + 1 }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      increaseCounter.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'model/devTools'\n\nimport main from 'model/main.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { useCallback, useEffect, useState } from 'react'\nimport { Provider } from 'react-redux'\nimport { WalletProvider, UIProvider } from '@sentre/senhub'\nimport { ParserProvider } from 'idl-parser'\n\nimport View from 'view'\n\nimport configs from 'configs'\nimport model from 'model'\n\nconst {\n  manifest: { appId },\n  sol: { node },\n} = configs\n\nexport const Page = () => {\n  const [walletAddress, setWalletAddress] = useState('')\n\n  const getWalletAddress = useCallback(async () => {\n    if (!window.sentre.wallet) return\n    const address = await window.sentre.wallet.getAddress()\n    setWalletAddress(address)\n  }, [])\n\n  useEffect(() => {\n    getWalletAddress()\n  }, [getWalletAddress])\n\n  return (\n    <UIProvider appId={appId} antd>\n      <WalletProvider>\n        <Provider store={model}>\n          <ParserProvider\n            connection={node}\n            walletAddress={walletAddress}\n            programAddresses={{ provider: '' }}\n          >\n            <View />\n          </ParserProvider>\n        </Provider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n\nexport * from 'static.app'\n"],"names":["_rect","_g","_defs","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","clipPath","opacity","d","x","y","transform","x1","y1","x2","y2","gradientUnits","stopColor","offset","ForwardRef","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","obj","__esModule","panels","instruct","loading","setLoading","useState","txInstructions","useParser","wallet","address","walletAddress","useWallet","onClick","async","keys","instruction","transaction","Transaction","add","provider","node","rpc","window","sentre","connection","Connection","publicKey","PublicKey","AnchorProvider","signTransaction","signAllTransactions","signedTransactions","transactions","signedTransaction","push","commitment","skipPreflight","getAnchorProvider","content","txId","notify","type","description","open","util","notifySuccess","sendAndConfirm","error","er","message","Button","Row","gutter","justify","Col","md","lg","span","Card","bordered","UploadIdl","Space","direction","Typography","level","map","idx","block","style","textAlign","Empty","shared","appId","process","url","devnet","spltAddress","splataAddress","testnet","mainnet","manifest","development","staging","production","env","sol","net","BigInt","toJSON","toString","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","proto","getPrototypeOf","isPlainObject","BN","Buffer","isBuffer","NAME","increaseCounter","createAsyncThunk","_","getState","main","counter","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","configureStore","middleware","getDefaultMiddleware","devTools","reducer","configs","Page","setWalletAddress","getWalletAddress","useCallback","getAddress","useEffect","UIProvider","antd","WalletProvider","Provider","store","model","ParserProvider","programAddresses"],"sourceRoot":""}